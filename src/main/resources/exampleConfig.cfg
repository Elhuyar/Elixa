## This is a EliXa-atp module training parameter file.
## Commenting out a line is equivalent to saying to not use that feature.
#
# WARNING: all paths are relative to the working directory (assuming you execute the program from the EliXa instalation directory). 
# You can also use absolute paths, and change the paths to meet your needs. 

## Path definitions
# Path to the PoStagger model (for Basque eustagger|ixa-pipe-pos-eu executable path can be specified here instead of a ixa-pipe model)
pos-model=/path/to/the/pos-models/es/es-perceptron-baseline-autodict01-ancora.bin
# Path to the PoStagger lemmatizer-model (for Basque eustagger|ixa-pipe-pos-eu a random string may be used, because no lemma-model is needed)
lemma-model=/path/to/the/lemma-models/es/es-lemma-perceptron-baseline-autodict01-ancora.bin
# Path to the directory storing the nlp-processed files.
kafDir=/path/to/the/tagged/files
# Path to the directory storing the feature vectors for instances (arff files).
fVectorDir=/path/to/the/feature/vectors

### From now on training features' parameters 

# character ngram features
#chrngrams=3-5
#chrfMinFreq=5
# word from ngram features
wfngrams=1
wfMinFreq=3
wfTfidfThreshold=2
# lemma ngram features
#lemmaNgrams=1
#lemmaMinFreq=3
#lemmaTfidfThreshold=0.04
# whether to respect letter case when generating ngrams. NOTE that the parameter affect all ngrams (chr|wf|lemmas) - yes|no
caseSensitiveNgrams=no 
# use pos categories
pos=1
# pos filter (only use certain categories). Categories separated by commas will be filtered out
# O(punct), P(to), Q(pron), C(conj), D(det), A(adv), N(nn), V, R(np), G(adj) 
#posFilter=C,D
# Use aspect categories (0=no | 1=yes, category info as a whole - E#A | 2=yes, 2 separated features for Entity and Attribute categories - E & A -)
#categories=E#A
# add sentence length as a feature (yes|no).  
#sentenceLength=yes
# add uppercase letter ratio as a feature  (yes|no).
#upperCaseRatio=yes
# Text Normalization type (mostly for Twitter): (all=user/hashtag/url/emoticon | minimum=hashtag | url=url | noEmot=no emoticon normalization | noHashtag=no hashtag normalization | noHashEmo = no hashtag nor emoticon normalization | urlEmot = url and emoticon normalization | usrHashUrl = user, hashtag and url normalization | minimum = hashtag normalization )
#normalization=all

## Polarity specific features
# Use polarity information as feature  (yes|no)
polarity=yes
# Use polarity lexicon entries as lemmas (general and/or domain lexicons must be active)
#polNgrams=yes
# General polarity lexicon path
#polarLexiconGeneral=/path/to/the/general/domain/polarity/lexicon.lex
# Domain polarity lexicon path
#polarLexiconDomain=/path/to/the/domain/specific/polarity/lexicon.lex

## window to use around a target to compute the vector. Value corresponds to n tokens before and n tokens after a target
## e.g. window = 2 means [x1 x2 target x3 x4]. If an opinion has a null target the full sentence is taken. 
## window=0 means that the whole sentence will be taken in any case.
window=0

## Cluster files
#clark=/path/to/the/wrdClusters/clark/cluster.file
#brown=/path/to/the/wrdClusters/clark/cluster.file
#word2vec=/path/to/the/wrdClusters/clark/cluster.file
